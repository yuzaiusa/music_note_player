"""
Class MusicNotePlayer cannot save its results easily. Python classes usually don't have a universal save/load function.
(It can be done with pickle, but it's not platform independent and not very user friendly.)

To save/load in a platform independent and user friendly way, we can use json files. Json files are text files that
can be easily read and written by humans. They can also be easily parsed and generated by machines. Json files can
represent basic data structures such as strings, numbers, lists, and dictionaries.

In thise exercise, please derive a new class called MusicNotePlayerWithSave from MusicNotePlayer. You need to
add two methods:
- `to_json(self) -> str`: Convert the internal state of the class object to a json string.
- `from_json(self, json_str: str)`: Set the internal state of the class object from a json string.
"""

if __name__ == "__main__":
    # TODO: test your class here
    pass

"""
Tips:
1. json dump a dict to a str or a file. To dump to a file, use json.dump. To dump to a str, use json.dumps.
2. json load a dict from a str or a file. To load from a file, use json.load.
3. json dump and load deals with files opened in text mode. It takes in a file object instead of a file name.
    So, the typical usage is like:
    with open(filename, "r") as json_file:
        json.load(json_file)

    or, to dump:
    with open(filename, "w") as json_file:
        json.dump(my_dict_to_be_dumped, json_file)
"""